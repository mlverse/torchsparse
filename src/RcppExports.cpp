// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "torchsparse_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_sparse_ind2ptr
torch::Tensor rcpp_sparse_ind2ptr(torch::Tensor ind, int64_t M);
RcppExport SEXP _torchsparse_rcpp_sparse_ind2ptr(SEXP indSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< torch::Tensor >::type ind(indSEXP);
    Rcpp::traits::input_parameter< int64_t >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sparse_ind2ptr(ind, M));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sparse_ptr2ind
torch::Tensor rcpp_sparse_ptr2ind(torch::Tensor ptr, int64_t E);
RcppExport SEXP _torchsparse_rcpp_sparse_ptr2ind(SEXP ptrSEXP, SEXP ESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< torch::Tensor >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< int64_t >::type E(ESEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sparse_ptr2ind(ptr, E));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sparse_random_walk
torch::Tensor rcpp_sparse_random_walk(torch::Tensor rowptr, torch::Tensor col, torch::Tensor start, int64_t walk_length);
RcppExport SEXP _torchsparse_rcpp_sparse_random_walk(SEXP rowptrSEXP, SEXP colSEXP, SEXP startSEXP, SEXP walk_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< torch::Tensor >::type rowptr(rowptrSEXP);
    Rcpp::traits::input_parameter< torch::Tensor >::type col(colSEXP);
    Rcpp::traits::input_parameter< torch::Tensor >::type start(startSEXP);
    Rcpp::traits::input_parameter< int64_t >::type walk_length(walk_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sparse_random_walk(rowptr, col, start, walk_length));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_torchsparse_rcpp_sparse_ind2ptr", (DL_FUNC) &_torchsparse_rcpp_sparse_ind2ptr, 2},
    {"_torchsparse_rcpp_sparse_ptr2ind", (DL_FUNC) &_torchsparse_rcpp_sparse_ptr2ind, 2},
    {"_torchsparse_rcpp_sparse_random_walk", (DL_FUNC) &_torchsparse_rcpp_sparse_random_walk, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_torchsparse(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
